{
  "title": "SSG와 SSR과 NextJS에 관해",
  "createAt": "2024-10-01T10:57:00.000Z",
  "updateAt": "2024-10-02T11:24:00.000Z",
  "tags": "NextJS,SSR,SSG",
  "content": "```yaml\ntitle: \"SSG와 SSR과 NextJS에 관해\"\ndescription: \"Next.js에서 동적 경로 구현 및 getStaticPaths와 getServerSideProps의 차이를 설명하며, SSG와 SSR의 장단점을 논의합니다. Page Router와 App Router의 차이점도 다루어, 각각의 상황에 맞는 선택을 평가합니다.\"\nogImage: \"https://opengraph.b-cdn.net/production/images/c75fa6d5-ce88-493d-89c1-57b7636d623c.png?token=ZQPb-u9y5Kec5UbWnfDtQMX6NHrbO3qZGAJEkjkWFj4&height=1200&width=1200&expires=33263845179\"\ncleanUrl: \"/fe-study/ssg-ssr-nextjs\"\n```\n\n# 질문\n\nNext.js에서 동적 경로(dynamic routing)를 구현하는 방법을 설명하고, getStaticPaths와 getServerSideProps를 활용하여 동적 페이지를 생성하는 차이점에 대해 살명해주세요.\n\n\n## 질문의도\n\nNext.js의 동적 경로(dynamic routing) 구현에 대한 이해를 평가합니다. getStaticPaths와 getServerSideProps의 차이점과 각각의 성능 및 SEO에 미치는 영향을 잘 이해하고 있으며, 실무에서 어떤 상황에 맞게 선택할 수 있는지를 확인하려는 의도입니다.\n\n\n\n---\n\n## Dynamic Routing\n\nDynamic Routing은 `[id], [...id], [[...id]]` 와 같은 구성으로 만들 수 있다.\n\n1. [id]\n1. [...id]\n1. [[...id]]\n## getStaticPaths, getStaticProps\n\n1. getStaticProps는 SSG를 사용하기 위해 NextJS에서 제공하는 API이다.\n1. 페이지 생성은 빌드 타임에 생성을 목표로 한다.\n1. getStaticPaths\n1. 장점\n1. 단점\n## getServerSideProps\n\n1. SSR을 하기 위해 NextJS 에서 제공하는 API 이다.\n1. SSR은 동적 페이지를 다루는데 좋은 렌더링 방식 중 하나이다.\n1. 장점\n1. 단점\n## 결론\n\n1. SSR이라는 기술과 SSG 라는 기술은 사실 웹기술에서는 예전부터 있던 기술이였다. SEO점수를 포기할 만큼 유저경험(UX)가 더 좋다는 CSR의 기술이 유행을 하면서 잊혀지고 있었는데, SEO라는 약점을 개선한 SSR, SSG, ISR 등의 기술을 기존의 CSR의 유저경험을 똑같이 제공하는 프레임워크들의 등장으로 필수 기술이 됐다.\n1. 특히 NextJS에서는 Page Router, App Router 가 존재하며, Page Router의 단점을 극복하기 위해 App Router가 등장했다.\n"
}