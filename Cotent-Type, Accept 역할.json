{
  "title": "Cotent-Type, Accept 역할",
  "createAt": "2024-10-02T12:32:00.000Z",
  "updateAt": "2024-10-02T12:37:00.000Z",
  "tags": "Frontend,Browser,Web",
  "content": "```yaml\ntitle: \"Cotent-Type, Accept 역할\"\ndescription: \"나는 HTTP 헤더 중 Content-Type과 Accept의 역할을 설명하고, MIME 타입 활용과 잘못된 설정이 초래할 수 있는 문제점과 해결 방법에 대해 논리적으로 정리한 내용을 통해 클라이언트와 서버 간 데이터 처리의 중요성을 이해할 수 있다고 생각한다.\"\nogImage: \"https://opengraph.b-cdn.net/production/images/c75fa6d5-ce88-493d-89c1-57b7636d623c.png?token=ZQPb-u9y5Kec5UbWnfDtQMX6NHrbO3qZGAJEkjkWFj4&height=1200&width=1200&expires=33263845179\"\ncleanUrl: \"/fe-study/content-type-accept-role\"\n```\n\n## 질문\n\nHTTP 헤더 중 Content-Type과 Accept 헤더의 역할을 설명하고, 클라이언트와 서버 간 데이터 전송 시 MIME 타입이 어떻게 활용되는지 구체적으로 밀씀해주세요. 그리고 Content-Type 설정이 잘못될 경우 발생할 수 있는 문제점과 이를 해결하는 방법에 대해 설명해주세요.\n\n\n\n## 질문의도\n\n클라이언트와 서버가 주고받는 데이터 형식을 어떻게 명확히 지정하는지, 잘못된 설정으로 인해 발생할 수 있는 문제(예: 데이터 처리 오류, 보안 취약점)와 그 해결 방안을 논리적으로 설명할 수 있는지를 확인하려는 의도입니다.\n\n\n\n# Content-Type\n\n---\n\n- 역할: 클라이언트가 서버에 데이터를 보낼 때, 서버가 클라이언트로부터 받은 데이터를 어떻게 해석해야하는지를 알려주는 이정표(?)\n- 예시: \"Content-Type\": \"application/json\" 일 경우 서버에게 \"나는 JSON 형식의 데이터를 보내고 있어\" 라고 알려줄 수 있다.\n\n\n\n\n# Accept\n\n---\n\n- 클라이언트가 서버에게 요청할 때, 원하는 데이터 유형을 말한다.\n- 예시: \"Accept\": \"application/json\" 일 경우 서버에게 \"JSON 형식의 응답을 줘\" 라는 요청\n\n\n# MIME 타입\n\n---\n\n- type/subtype 유형으로 되어있다.\n- type은 video, text, application 등이 있고, 타입에는 discrete, multipart라는 두가지의 클래스가 존재한다.\n- Discrete\n- Multipart\n\n\n# Content-Type이 잘못 설정된 경우\n\n---\n\n- 서로 약속된 Type으로 데이터 처리를 해야하는 입장에서 MIME 타입이 안맞을 경우 프로덕트의 비지니스 로직의 문제가 생길 수 있다.\n- 예시:\n클라이언트가 JSON 데이터를 Content-Type: text/plain으로 보낼 경우 서버는 데이터를 문자열로 처리하게 되기 때문에 원본데이터의 문제가 생길 위험이 있다.\n\n\n# 해결 방법\n\n---\n\n- API 문서에서 Request의 Media type을 명시한다\n- Content-Type에 대한 유효성 검사를 추가한다\n"
}