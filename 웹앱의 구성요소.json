{
  "title": "웹앱의 구성요소",
  "createAt": "2024-10-01T09:10:00.000Z",
  "updateAt": "2024-10-02T12:04:00.000Z",
  "tags": "Web,App",
  "content": "```yaml\ncleanUrl: \"/frontend/components-web-app\"\ntitle: \"웹앱의 구성요소\"\ndescription: \"웹앱은 HTML, CSS, Javascript로 구성되며, 브라우저에서 해석되어 실행된다. 웹앱은 클라이언트 사이드 렌더링(CSR)과 서버 사이드 렌더링(SSR) 방식으로 UI를 제공한다.\"\nogImage: \"https://opengraph.b-cdn.net/production/images/c75fa6d5-ce88-493d-89c1-57b7636d623c.png?token=ZQPb-u9y5Kec5UbWnfDtQMX6NHrbO3qZGAJEkjkWFj4&height=1200&width=1200&expires=33263845179\"\n```\n\n# 애플리케이션의 정의\n\n- 애플리케이션의 정의는 다른거 없이 입력을 받고 출력하는 행위를 하는 것을 말하는 것 같다\n웹앱의 구성요소\n\n\n### 1. 웹의 기본 구성요소\n\n- 웹앱을 구성하는 여러가지의 요소라고 할 수 있다\n- HTML\n- CSS\n- Javascript\n- 웹 페이지만 만들거면 HTML만 있어도 된다\n- 어떤 관점에서 무엇이냐에 따라 많은 구성요소가 나올 수 있다\n\n\n### 2. 실행 관점의 구성요소\n\n- 웹 앱이 실행된다는 관점은 사용자가 주소창에 특별한 홈페이지 주소를 입력하는 행위라고 할 수 있다\n- HTML, CSS, Javascript 파일들이 물리적으로 사용자의 브라우저에 전송이 되고, 브라우저가 그 파일들을 해석해서 실행시키면 웹앱이 동작되는 형태가 된다\n- 웹앱을 실행시키는 주체는 브라우저이다\n- 브라우저는 런타임 환경이라고 말을 한다\n\n\n### 3. CSR & SSR\n\n- UI를 제공하려면 HTML을 만들어야하는데 이걸 어디서 작성을 하느냐에 관점이 있다\n- Javascript도 조작할 수 있다\n- 필요한 UI를 그때그때 만들어서 제공하는게 있다 (CSR)\n- Javascript의 실행 결과로 HTML이 만들어지는게 아니라, 웹 서버에서 HTML을 만들어서 브라우저로 전송하는 방식이 있다(SSR)\n"
}